#!/bin/sh

case $BLOCK_BUTTON in 1) setsid -w -f "$TERMINAL" -e pulsemixer; pkill -RTMIN+10 "${STATUSBAR:-dwmblocks}" ;;
	2) wpctl set-mute @DEFAULT_SINK@ toggle ;;
	4) wpctl set-volume @DEFAULT_SINK@ 1%+ ;;
	5) wpctl set-volume @DEFAULT_SINK@ 1%- ;;
	3) notify-send "📢 Volume module" "\- Shows volume 🔊, 🔇 if muted.
- Middle click to mute.
- Scroll to change." ;;
	6) setsid -f "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

vol="$(wpctl get-volume @DEFAULT_AUDIO_SINK@)"

# check Headphone or Speaker
status=$(grep -A4 -ri 'Headphone Playback Switch' /proc/asound/card1/codec\#0 | grep "Amp-Out vals.*0x00 0x00" > /dev/null)
exit_state=$?
if [ $exit_state -eq 0 ]; then
    state="🎧"
else
    state="📢"
fi


# If muted, print 🔇 and exit.
[ "$vol" != "${vol%\[MUTED\]}" ] && echo 🔇 && exit

vol="${vol#Volume: }"

split() {
	# For ommiting the . without calling and external program.
	IFS=$2
	set -- $1
	printf '%s' "$@"
}

vol="$(printf "%.0f" "$(split "$vol" ".")")"

case 1 in
	$((vol >= 70)) ) icon="$state 🔊" ;;
	$((vol >= 30)) ) icon="$state 🔉" ;;
	$((vol >= 1)) ) icon="$state 🔈" ;;
	* ) echo 🔇 && exit ;;
esac

echo "$icon$vol%"


#  case $BLOCK_BUTTON in
#  	1) setsid -f "$TERMINAL" -n spf -g 110x18 -e pulsemixer ;;
#  	2) pamixer -t ;;
#  	4) pamixer -i 5 ;;
#  	5) pamixer -d 5 ;;
#  	3) notify-send "📢 Volume module" "\- Shows volume 🔊, 🔇 if muted.
#  - Middle click to mute.
#  - Scroll to change." ;;
#  	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
#  esac
#  
#  status=$(grep -A4 -ri 'Headphone Playback Switch' /proc/asound/card1/codec\#0 | grep "Amp-Out vals.*0x00 0x00" > /dev/null)
#  exit_state=$?
#  if [ $exit_state -eq 0 ]; then
#      state="🎧"
#  else
#      state="📢"
#  fi
#  
#  
#  [ "$(pamixer --get-mute)" = true ] && echo "$state 🔇" && exit
#  
#  vol="$(pamixer --get-volume)"
#  
#  if [ $vol -gt 70 ]; then
#  	icon="$state 🔊"
#  elif [ $vol -lt 30 ]; then
#  	icon="$state 🔉"
#  else
#  	icon="$state 🔈"
#  fi
#  
#  printf "%s%s" "$icon " "$vol%"





