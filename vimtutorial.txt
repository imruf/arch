1. NORMAL MODE

A. Move in vim


    k
    ^
h <   > l
    v
    j



w - Forward to the beginning of next word
W - Forward to the beginning of the next WORD
b - Backward to the next beginning of a word
B - Backward to the next beginning of a WORD
e - Forward to the next end of word
E - Forward to the next end of WORD

[n]f<o> - Forward until (nth) (o)  (Inclusive)
[n]F<o> - Backward until (nth) (o) (Inclusive)
[n]t<o> - Forward until (nth) (o)  (Exclusive)
[n]T<o> - Backward until (nth) (o) (Exclusive)



2. INSERT MODE

i - Enter insert mode at cursor
I - Enter insert mode at first non-blank character
s - Delete character under cursor and enter insert mode
S - Delete line and begin insert at beginning of same line
a - Enter insert mode _after_ cursor
A - Enter insert mode at the end of the line
o - Enter insert mode on the next line
O - enter insert mode on the above line
C - Delete from cursor to end of line and begin insert


3. COPY/PASTE

y - Yank. Example: yw (yank word)
p - paste after cursor
P - paste before cursor


4. SEARCHING

/  - Forward
?  - Backward
*  - Word under cursor - forward  (bounded)
g* - Word under cursor - forward  (unbounded)
#  - Word under cursor - backward (bounded)
g# - Word under cursor - backward (unbounded)
n  - Next result, forward
N  - Next result, backward



5. EXPERT EDITING

3dw - delete 3 words
3 d w
| | ` word ---.
| ` delete     } 3 words
` 3 ----------/

ci(
c i (
| | ` Parenthesis text-object
| ` Inside text-object
` change



d - Delete: [range]d<motion>
    dd  - delete current line
    dj  - delete current and next line (j = down)
    2dj - delete current and 2 lines downward

c - Change (Same as d but put me in insert mode)
    cw - change word
    cc = S - Delete current line and enter insert mode  
    2cw - Delete 2 words and enter insert mode

~  - Toggle the case of character under cursor
g~ - Toggle case of [motion]
    g~w - Toggle case of cursor -> end of word
        tr|ue -> g~w -> trUE
    g~iw - Toggle case of entire word under cursor
        tr|ue -> g~iw -> TRUE

p - Paste 


6. REGISTERS

"<reg>
    Example:
        "ayy - Yank current line into 'a' register
        "ap  - Paste 'a' register

<C-r><reg> - Paste contents of <reg>
    Example:
        [INS] Hello [ESC] byw [INS]<C-r>" -> HelloHello


#For More
https://github.com/shawncplus/vim-classes
